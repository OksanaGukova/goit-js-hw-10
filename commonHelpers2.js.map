{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst snackbarForm = document.querySelector('.form');\nconst snackbarButton = document.querySelector('button[type=\"submit\"]');\n \n  \nsnackbarForm.addEventListener('submit', createPromise);\nsnackbarButton.addEventListener('click', createPromise);\n\nfunction createPromise(event) {\n  event.preventDefault();\n const stateInput = document.querySelector('input[name=\"state\"]:checked');\n const delayInput = document.querySelector('input[name=\"delay\"]');\n  const delay = parseInt(delayInput.value);\n  const state = stateInput.value;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n  promise\n    .then(delay => {\n      iziToast.show({\n        message: `Fulfilled promise in ${delay}ms`,\n      });\n    })\n    .catch(delay => {\n      iziToast.show({\n        message: `Rejected promise in ${delay}ms`,\n      });\n    });\n}\n"],"names":["snackbarForm","snackbarButton","createPromise","event","stateInput","delayInput","delay","state","resolve","reject","iziToast"],"mappings":"uIAGA,MAAMA,EAAe,SAAS,cAAc,OAAO,EAC7CC,EAAiB,SAAS,cAAc,uBAAuB,EAGrED,EAAa,iBAAiB,SAAUE,CAAa,EACrDD,EAAe,iBAAiB,QAASC,CAAa,EAEtD,SAASA,EAAcC,EAAO,CAC5BA,EAAM,eAAc,EACrB,MAAMC,EAAa,SAAS,cAAc,6BAA6B,EACjEC,EAAa,SAAS,cAAc,qBAAqB,EACxDC,EAAQ,SAASD,EAAW,KAAK,EACjCE,EAAQH,EAAW,MACT,IAAI,QAAQ,CAACI,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAEE,KAAKA,GAAS,CACbI,EAAS,KAAK,CACZ,QAAS,wBAAwBJ,CAAK,IAC9C,CAAO,CACP,CAAK,EACA,MAAMA,GAAS,CACdI,EAAS,KAAK,CACZ,QAAS,uBAAuBJ,CAAK,IAC7C,CAAO,CACP,CAAK,CACL"}